from ultralytics import YOLO

# Load a pretrained model
model = YOLO("yolo11n.pt")

# Link: https://www.swisstransfer.com/d/71e730f9-84ba-4533-b197-815af0edfb85
# Train the model on your custom dataset
model.train(data="dataset.yaml", 
            epochs= 150, 
            imgsz= 640, 
            batch = 16, 
            device = 0, 
            lr0 = 0.005, # Compromis entre 0.01 et 0.001 pour une convergence stable sans risque de divergence trop agressive. 0.001 trÃ©s stable mais la convergence est trÃ¨s lente. 0.01 Convergence rapide mais risque d'oscilation
            lrf = 0.01 ,  # RÃ©duit fotement le lr en fin de training, mais peut rendre le taux final trop faible et stopper learning en phase finale 
            optimizer = "SGD", # Bonne gÃ©nÃ©ralisation et une stabilitÃ© pour gros dataset, mais nÃ©cessite un tuning comme l'ajout de momentum et peut conveger lentement
            momentum = 0.937, 
            weight_decay =0.0005, # 0.001 renforce la rÃ©gularisation qui est utile pour nano, mais peut introduire underfitting en cas de rÃ©gularisation trop forte 
            augment = True,
            mosaic=0.5, 
            scale=0.3,
            mixup=0.2, 
            patience=20, 
            freeze=0,
 )


"""
mosaic=0.5â€“1.0 : mÃ©lange de 4 images, trÃ¨s utile pour casser la structure de lâ€™image.

mixup=0.2â€“0.3 : mÃ©lange pixel Ã  pixel de 2 images â†’ force le modÃ¨le Ã  Ãªtre robuste Ã  du bruit de fond.

scale=0.4, translate=0.1â€“0.2, shear=2â€“5 : simule du zoom, des translations latÃ©rales, etc.

perspective=0.001â€“0.01 : ajoute un effet de parallaxe pour simuler des angles.

ðŸŽ¨ ColorimÃ©triques :
hsv_h=0.015, hsv_s=0.7, hsv_v=0.4 : pour changer la teinte et les contrastes.

random brightness/contrast ou CLAHE (amÃ©lioration locale de contraste adaptatif).

Inversion canal (BGR->RGB) sur une fraction."""